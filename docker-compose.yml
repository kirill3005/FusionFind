services:
  main:
    image: python-app-base
    container_name: fastapi-app
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - ${PROJECT_VOLUME}:/app:cached
    ports:
      - "8000:8000"
    command:
      ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - develop_project_network
  api:
    image: python-app-base
    container_name: api
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - ${PROJECT_VOLUME}:/app:cached
    ports:
      - "8001:8001"
    command:
      [ "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8001" ]
    networks:
      - develop_project_network
  postgres:
    image: postgres:latest
    container_name: postgres_fast_api
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fast_api
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5440:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    networks:
      - develop_project_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - develop_project_network

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:cached
      - ${PROJECT_VOLUME}:/application:cached
      - ./docker/server/nginx/:/var/log/nginx
    env_file:
      - app/.env
    networks:
      - develop_project_network



networks:
  develop_project_network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  qdrant_data:


